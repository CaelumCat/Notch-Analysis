

#wald test for underexpression data
#make new sleuth object with a log2 transformation rather than a natural log transformation
#the beta values will properly represent fold change!
so2 <- sleuth_prep(s2c, 
                  full_model = ~condition, 
                  read_bootstrap_tpm = TRUE,
                  extra_bootstrap_summary = TRUE,
                  transformation_function = function(x) log2(x + 0.5))  
                  
                  
#fit model
so2 <- sleuth_fit(so2)

#check model status (correct forumula and coefficients)
#the level not shown is the base level (should be control)
models(so2)

#run if incorrect base level
#otherwise DO NOT RUN!
#this is a random internet example since I did not need to do this
summarydata$sampletype <- relevel(summarydata$sampletype, ref = "MOV10_knockdown")

#run wald test
#I originally named this sleuth object "oe" but changed it to so2 when I realized oe stands for overepxression
so2 <- sleuth_wt(so2, 
+                 which_beta = 'conditionNts1')

#create and view results table
#I originally named this file sleuth_results_oe but changed the name to sleuth_results_wt since I realized oe stands for overexpression
sleuth_results_wt <- sleuth_results(so2, 
+                                     test = 'conditionNts1', 
+                                     show_all = TRUE)
View(sleuth_results_wt)

#-------------------------
#wald test for overexpression data

so_oe2 <- sleuth_prep(oe_metadata, 
+                    full_model = ~condition, 
+                    read_bootstrap_tpm = TRUE,
+                    extra_bootstrap_summary = TRUE,
+                    transformation_function = function(x) log2(x + 0.5)) 

so_oe2 <- sleuth_fit(so_oe2)

models(so_oe2)

so_oe2 <- sleuth_wt(so_oe2, which_beta = 'conditionNts1')

sleuth_results_wt_oe <- sleuth_results(so_oe2, test = 'conditionNts1', show_all = TRUE)
